@{
    ViewData["Title"] = "Privacy Policy";
}
<h1>Calculate Travel Distance and Time</h1>
<div>
    <label for="address1">Address 1:</label>
    <input id="address1" type="text" placeholder="Enter the first address">
</div>
<div>
    <label for="address2">Address 2:</label>
    <input id="address2" type="text" placeholder="Enter the second address">
</div>
<div>
    <label for="mode">Travel Mode:</label>
    <select id="mode">
        <option value="driving">Driving</option>
        <option value="walking">Walking</option>
        <option value="bicycling">Bicycling</option>
        <option value="transit">Transit</option>
    </select>
</div>
<button id="calculate-distance">Calculate Distance</button>
<p>Distance: <span id="distance"></span></p>
<p>Duration: <span id="duration"></span></p>

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBBL3yuXF5CTvGvQey6S45zuHfx0o1KdWA&libraries=places"></script>
    <script>
        let autocomplete1, autocomplete2;

        function initAutocomplete() {
          // Initialize Google Maps Places Autocomplete
          autocomplete1 = new google.maps.places.Autocomplete(document.getElementById('address1'), { types: ['geocode'] });
          autocomplete2 = new google.maps.places.Autocomplete(document.getElementById('address2'), { types: ['geocode'] });
        }

        function calculateDistanceMatrix() {
          const address1 = document.getElementById('address1').value;
          const address2 = document.getElementById('address2').value;
          const travelMode = document.getElementById('mode').value;

          if (!address1 || !address2) {
            alert('Please enter both addresses.');
            return;
          }

          // Initialize the Distance Matrix Service
          const service = new google.maps.DistanceMatrixService();

          service.getDistanceMatrix(
            {
              origins: [address1],
              destinations: [address2],
              travelMode: travelMode.toUpperCase(),
            },
            (response, status) => {
              if (status === 'OK') {
                const result = response.rows[0].elements[0];
                if (result.status === 'OK') {
                  // Display distance and duration
                  document.getElementById('distance').textContent = result.distance.text;
                  document.getElementById('duration').textContent = result.duration.text;
                } else {
                  alert('Could not calculate distance: ' + result.status);
                }
              } else {
                alert('Error with Distance Matrix request: ' + status);
              }
            }
          );
        }

        document.getElementById('calculate-distance').addEventListener('click', calculateDistanceMatrix);

        // Initialize autocomplete when the page loads
        document.addEventListener('DOMContentLoaded', initAutocomplete);
    </script>
}