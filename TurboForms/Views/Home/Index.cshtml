@{
    ViewData["Title"] = "Home Page";
}
@model TurboForms.ViewModels.CreateOrder;

<div class="formbold-main-wrapper row justify-content-center" dir="rtl">
    <!-- Author: FormBold Team -->
    <!-- Learn More: https://formbold.com -->
    <div class=" col-md-5">
        @* formbold-form-wrapper *@

        <form asp-action="SubmitForm" method="post" id="createOrderForm">

            <div class="formbold-steps">
                <ul>
                    <li class="formbold-step-menu1 active">
                        <span>1</span>
                        @_localizer["Information"]
                    </li>
                    <li class="formbold-step-menu2">
                        <span>2</span>
                        @_localizer["OrderDetails"]
                    </li>
                    <li class="formbold-step-menu3">
                        <span>3</span>
                        @_localizer["Confirm"]
                    </li>
                </ul>
            </div>

            <div class="formbold-form-step-1 active">
                <div class="formbold-input-radio-wrapper">
                    <label for="OrderStatus" class="formbold-form-label"> @_localizer["breakable"] </label>

                    <div class="formbold-radio-flex">
                        <div class="formbold-radio-group">
                            <label class="formbold-radio-label">
                                <input class="formbold-input-radio" asp-for="OrderStatus" value="true" type="radio" name="OrderStatus" id="OrderStatus" checked>
                                @_localizer["yes"]
                                <span class="formbold-radio-checkmark"></span>
                            </label>
                        </div>

                        <div class="formbold-radio-group">
                            <label class="formbold-radio-label">
                                <input class="formbold-input-radio" asp-for="OrderStatus" value="false" type="radio" name="OrderStatus" id="OrderStatus">
                                @_localizer["no"]
                                <span class="formbold-radio-checkmark"></span>
                            </label>
                        </div>
                    </div>
                </div>

                <hr />

                <div class="formbold-mb-3">
                    <label for="firstname" class="formbold-form-label"> @_localizer["BName"] </label>
                    <input type="text"
                           asp-for="Name"
                           id="firstname"
                           placeholder="@_localizer["BName"]"
                           class="formbold-form-input" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="formbold-mb-3">
                    <label for="address" class="formbold-form-label"> @_localizer["BAddress"] </label>
                    <input type="text"
                           asp-for="Adress"
                           id="address1"
                           placeholder="@_localizer["BAddress"]"
                           class="formbold-form-input" />
                    <span asp-validation-for="Adress" class="text-danger"></span>
                </div>

                <div class="formbold-mb-3">
                    <label for="phone" class="formbold-form-label"> @_localizer["BPhone"] </label>
                    <input type="text"
                           asp-for="Phone"
                           id="phone"
                           placeholder="@_localizer["BPhone"]"
                           class="formbold-form-input" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>

                <div class="formbold-mb-3">
                    <label for="pickupdate" class="formbold-form-label"> @_localizer["PickupDate"] </label>
                    <input type="datetime-local"
                           asp-for="PickupDate"
                           id="pickupdate"
                           value="@DateTime.Now.ToString("yyyy-MM-ddThh:mm")"
                           placeholder="delivery date"
                           class="formbold-form-input" />
                    <span asp-validation-for="PickupDate" class="text-danger"></span>
                </div>

                <hr />

                <div class="formbold-mb-3">
                    <label for="CName" class="formbold-form-label"> @_localizer["CName"] </label>
                    <input type="text"
                           asp-for="CustomerName"
                           id="CName"
                           placeholder="@_localizer["CName"]"
                           class="formbold-form-input" />
                    <span asp-validation-for="CustomerName" class="text-danger"></span>
                </div>

                <div class="formbold-mb-3">
                    <label for="address" class="formbold-form-label"> @_localizer["CAddress"] </label>
                    <input type="text"
                           asp-for="CustomerAdress"
                           id="address2"
                           placeholder="@_localizer["CAddress"]"
                           class="formbold-form-input" />
                    <span asp-validation-for="CustomerAdress" class="text-danger"></span>
                </div>

                <div class="formbold-mb-3">
                    <label class="formbold-form-label"> @_localizer["CAddressDetails"] </label>
                    <input type="text"
                           value="@Model.CustomerAdressDetails"
                           asp-for="CustomerAdressDetails"
                           class="formbold-form-input" />
                </div>

                <div class="formbold-mb-3">
                    <label for="Cphone" class="formbold-form-label"> @_localizer["CPhone"] </label>
                    <input type="text"
                           asp-for="CustomerPhone"
                           id="Cphone"
                           placeholder="@_localizer["CPhone"]"
                           class="formbold-form-input" />
                    <span asp-validation-for="CustomerPhone" class="text-danger"></span>
                </div>

                @* <div class="formbold-mb-3">
                    <label for="deliverydate" class="formbold-form-label"> Delivery date </label>
                    <input type="datetime-local"
                           name="deliverydate"
                           id="deliverydate" 
                           value="@DateTime.Now"
                           class="formbold-form-input" />
                </div> *@

            </div>

            <div class="formbold-form-step-2">
                <div class="formbold-mb-3">
                    <label for="orderPrice" class="formbold-form-label"> @_localizer["OrderPrice"] </label>
                    <input type="number"
                           asp-for="OrderPrice"
                           id="orderPrice"
                           placeholder="0"
                           class="formbold-form-input" />
                </div>

                <div class="formbold-mb-3">
                    <label for="deliveryFee" class="formbold-form-label"> @_localizer["DeliveryFee"] </label>
                    <input type="number"
                           id="deliveryFee"
                           placeholder="0"
                           class="formbold-form-input" disabled />

                    <input type="hidden"
                           asp-for="DeliveryFee"
                           id="deliveryFeeHidden" />
                </div>

                <div class="formbold-mb-3">
                    <label for="total" class="formbold-form-label"> @_localizer["Total"] </label>
                    <input type="number"
                           id="total"
                           placeholder="0"
                           class="formbold-form-input" disabled />

                    <input type="hidden"
                           asp-for="Total"
                           id="totalHidden" />
                </div>

                <div class="formbold-input-radio-wrapper">
                    <label for="PaymentMethod" class="formbold-form-label"> @_localizer["PaymentMethod"] </label>

                    <div class="formbold-radio-flex">
                        <div class="formbold-radio-group">
                            <label class="formbold-radio-label">
                                <input class="formbold-input-radio active" asp-for="PaymentMethod" value="Cash" type="radio" name="PaymentMethod" id="PaymentMethod" checked>
                                @_localizer["Cash"]
                                <span class="formbold-radio-checkmark"></span>
                            </label>
                        </div>

                        <div class="formbold-radio-group">
                            <label class="formbold-radio-label">
                                <input class="formbold-input-radio" asp-for="PaymentMethod" value="Wallet" type="radio" name="PaymentMethod" id="PaymentMethod">
                                @_localizer["wallet"]
                                <span class="formbold-radio-checkmark"></span>
                            </label>
                        </div>

                        <div class="formbold-radio-group">
                            <label class="formbold-radio-label">
                                <input class="formbold-input-radio" asp-for="PaymentMethod" value="Instapay" type="radio" name="PaymentMethod" id="PaymentMethod">
                                @_localizer["Instapay"]
                                <span class="formbold-radio-checkmark"></span>
                            </label>
                        </div>
                    </div>
                </div>

                @* PaymentMethod *@
            </div>

            <div class="formbold-form-step-3" id="previewOrder">
            </div>

            <div class="formbold-form-btn-wrapper">
                <button class="formbold-back-btn">
                    @_localizer["Back"]
                </button>

                <button class="formbold-btn">
                    @_localizer["Next"]
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g clip-path="url(#clip0_1675_1807)">
                            <path d="M10.7814 7.33312L7.20541 3.75712L8.14808 2.81445L13.3334 7.99979L8.14808 13.1851L7.20541 12.2425L10.7814 8.66645H2.66675V7.33312H10.7814Z" fill="white" />
                        </g>
                        <defs>
                            <clipPath id="clip0_1675_1807">
                                <rect width="16" height="16" fill="white" />
                            </clipPath>
                        </defs>
                    </svg>
                </button>
            </div>

            @* <input type="hidden" id="distance" /> *@

            @* <div class="formbold-mb-3" style="display:none;">
                <button id="calculate-distance" type="button">Calculate Distance</button>
                <p>Distance: <span id="distance"></span></p>
                <p>Duration: <span id="duration"></span></p>
            </div> *@

        </form>
    </div>
</div>


@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        const garageLtLg = new google.maps.LatLng( 30.315741, 31.737745);

        let autocomplete1, autocomplete2;

        function initAutocomplete() {
          //$('#pickupdate').datetimepicker();

          // Initialize Google Maps Places Autocomplete
            autocomplete1 = new google.maps.places.Autocomplete(document.getElementById('address1'),
            {
                componentRestrictions: { country: "eg" }, // Restrict to Egypt
                types: ['geocode']
            });
            autocomplete2 = new google.maps.places.Autocomplete(document.getElementById('address2'),
            {
                componentRestrictions: { country: "eg" }, // Restrict to Egypt
                types: ['geocode']
            });
        }

        function calculateDistanceMatrix() {
            let distance1, distance2;
            const address1 = document.getElementById('address1').value;
            const address2 = document.getElementById('address2').value;
            const travelMode = 'driving';

            if (!address1 || !address2) {
            alert('Please enter both addresses.');
            return;
            }

            // Initialize the Distance Matrix Service
            const service = new google.maps.DistanceMatrixService();

            service.getDistanceMatrix(
            {
                origins:[garageLtLg],
                destinations: [address1],
                travelMode: travelMode.toUpperCase(),
            },
            (response1, status1) => {
                if (status1 === 'OK') {
                const result1 = response1.rows[0].elements[0];
                if (result1.status === 'OK') {
                    // Display distance and duration
                    //document.getElementById('distance').textContent = result.distance.text;
                    //document.getElementById('duration').textContent = result.duration.text;
                    distance1 = result1.distance.value;

                    service.getDistanceMatrix(
                    {
                        origins: [address1],
                        destinations: [address2],
                        travelMode: travelMode.toUpperCase(),
                    },
                    (response, status) => {
                        if (status === 'OK') {
                        const result = response.rows[0].elements[0];
                        if (result.status === 'OK') {
                            // Display distance and duration
                            //document.getElementById('distance').textContent = result.distance.text;
                            //document.getElementById('duration').textContent = result.duration.text;
                            distance2 = result.distance.value;\
                            calculateDeliveryFee(distance1,distance2);
                        } else {
                            alert('Could not calculate distance: ' + result.status);
                        }
                        } else {
                            alert('Error with Distance Matrix request: ' + status);
                        }
                    });
                } else {
                    alert('Could not calculate distance: ' + result1.status);
                }
                } else {
                alert('Error with Distance Matrix request: ' + status);
                }
            }
            );

        }

        function calculateDeliveryFee(distance1,distance2) {

            $.ajax({
                url: "@Url.Action("GetDeliveryFee", "Home")",
                type: "POST",
                data: {
                    distance1:distance1,
                    distance2:distance2
                },
                success: function(response){
                    document.getElementById('deliveryFee').value = response.total;
                    document.getElementById('deliveryFeeHidden').value = response.total;

                    calculateTotal();

                    document.querySelector('.formbold-btn').disabled = false;
                },
                error: function(xhr, textStatus, error){
                    // Handle error response
                }
            });

        }

        function calculateTotal() {

            var delivery = parseFloat(document.getElementById('deliveryFee').value) || 0;
            var order = parseFloat(document.getElementById('orderPrice').value) || 0;

            document.getElementById('total').value = delivery + order;
            document.getElementById('totalHidden').value = delivery + order;
        }

        function validateInfo(){
            $("#createOrderForm").validate();

            if ($('#createOrderForm').valid() === true) {
                console.log("valid");
            } else {
                console.log("invalid");
            }

            return $('#createOrderForm').valid();
        }

        function getOrderPreview() {

            var formData = new FormData(document.getElementById('createOrderForm'));

            $.ajax({
                url: "@Url.Action("GetPreview", "Home")",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function(response){
                    $('#previewOrder').html(response)
                    document.querySelector('.formbold-btn').disabled = false;
                },
                error: function(xhr, textStatus, error){
                    // Handle error response
                }
            });
        }

        document.getElementById('orderPrice').addEventListener('change', calculateTotal);

        //document.getElementById('calculate-distance').addEventListener('click', calculateDistanceMatrix);

        // Initialize autocomplete when the page loads
        document.addEventListener('DOMContentLoaded', initAutocomplete);
    </script>

    <script src="~/js/multistepform.js"></script>
}